package tile_surge

import (
	m "github.com/murphy214/mercantile"

	"testing"

)

// test for Make_Coords_Float
func Test_Make_Line_Float(t *testing.T) {
	testcases := []struct {
			Cur Cursor
			Coord [][]float64
			Expected  []uint32
	}{	
		{
			Coord:[][]float64{{-79.144182,37.86038},{-79.147561,37.862015},{-79.149087,37.864297},{-79.151333,37.865867},{-79.148608,37.868995},{-79.146444,37.869926},{-79.146609,37.871175},{-79.148116,37.872271},{-79.146631,37.873119},{-79.146086,37.874491},{-79.147633,37.87601},{-79.150761,37.876737},{-79.151872,37.878606},{-79.151415,37.880207},{-79.152644,37.881087},{-79.151459,37.88372},{-79.151931,37.886199},{-79.157423,37.890995},{-79.183978,37.914194},{-79.188868,37.916992},{-79.203026,37.925101},{-79.213373,37.930621},{-79.215586,37.932095},{-79.222985,37.936274},{-79.223729,37.936716},{-79.290254,37.973668},{-79.367781,38.018098},{-79.390704,38.031783},{-79.421869,38.050191},{-79.452312,38.068237},{-79.482405,38.086105},{-79.483715,38.083452},{-79.486021,38.080483},{-79.488298,38.079055},{-79.491326,38.075392},{-79.494038,38.071214},{-79.49542,38.069649},{-79.499522,38.062994},{-79.501175,38.061693},{-79.506323,38.05556},{-79.509346,38.052154},{-79.510558,38.051497},{-79.513608,38.050882},{-79.517051,38.049427},{-79.521513,38.04575},{-79.522534,38.043674},{-79.524522,38.041294},{-79.511167,38.035387},{-79.515073,38.030855},{-79.518355,38.028246},{-79.520168,38.025609},{-79.524328,38.021277},{-79.526869,38.017597},{-79.537081,38.005113},{-79.540507,38.002394},{-79.540444,38.000127},{-79.541341,37.998967},{-79.545984,37.992422},{-79.546769,37.991941},{-79.54942,37.987686},{-79.55175,37.984655},{-79.553811,37.982566},{-79.560257,37.976887},{-79.564719,37.971573},{-79.571175,37.965595},{-79.571788,37.964524},{-79.578544,37.957484},{-79.582184,37.954211},{-79.587204,37.951277},{-79.590142,37.947881},{-79.598134,37.943181},{-79.59894,37.942175},{-79.603403,37.938554},{-79.608795,37.935944},{-79.609841,37.934716},{-79.609888,37.933846},{-79.612404,37.930863},{-79.617195,37.923887},{-79.618338,37.921457},{-79.620384,37.919175},{-79.622178,37.915991},{-79.624273,37.913951},{-79.627717,37.90988},{-79.628104,37.905974},{-79.630581,37.902508},{-79.630626,37.901082},{-79.632522,37.898026},{-79.633035,37.896165},{-79.636115,37.891137},{-79.639303,37.887021},{-79.642361,37.882129},{-79.644109,37.88094},{-79.644102,37.879933},{-79.647375,37.874484},{-79.649171,37.873452},{-79.650757,37.871566},{-79.64522,37.867355},{-79.640892,37.87184},{-79.636802,37.869531},{-79.633971,37.868953},{-79.633259,37.866927},{-79.631807,37.866026},{-79.628312,37.865499},{-79.625836,37.863747},{-79.621253,37.862064},{-79.618173,37.86002},{-79.617014,37.859051},{-79.61323,37.856986},{-79.612272,37.856085},{-79.612289,37.855114},{-79.615436,37.852616},{-79.616675,37.852157},{-79.618534,37.848871},{-79.618598,37.844968},{-79.620265,37.843099},{-79.621328,37.839518},{-79.622911,37.837993},{-79.62457,37.833643},{-79.623954,37.832638},{-79.624764,37.830773},{-79.627596,37.827131},{-79.630567,37.825253},{-79.630945,37.824181},{-79.635308,37.818247},{-79.636383,37.815753},{-79.638226,37.814359},{-79.642271,37.814334},{-79.644219,37.810328},{-79.645682,37.808678},{-79.647229,37.804391},{-79.654603,37.794668},{-79.656596,37.792348},{-79.656343,37.789844},{-79.660423,37.783018},{-79.663223,37.779862},{-79.663491,37.777591},{-79.666094,37.773657},{-79.66709,37.771477},{-79.669628,37.769688},{-79.672759,37.766633},{-79.674006,37.763052},{-79.675085,37.75575},{-79.676163,37.751997},{-79.678046,37.747078},{-79.679592,37.744263},{-79.681608,37.741825},{-79.681665,37.740276},{-79.687203,37.736192},{-79.68872,37.734668},{-79.6830668024958,37.71859032558814},{-79.3768872376557,37.71859032558814},{-79.376175,37.721353},{-79.373406,37.722893},{-79.370364,37.72646},{-79.366497,37.726073},{-79.367034,37.727922},{-79.369847,37.727556},{-79.372003,37.729752},{-79.374599,37.728433},{-79.376926,37.728724},{-79.377126,37.73213},{-79.37612,37.734194},{-79.377221,37.734555},{-79.374808,37.739337},{-79.38134,37.740553},{-79.381126,37.742352},{-79.380274,37.74359},{-79.371454,37.745348},{-79.369519,37.745602},{-79.36472,37.744581},{-79.361502,37.751269},{-79.358453,37.752688},{-79.357909,37.75213},{-79.356702,37.754614},{-79.35432,37.754034},{-79.350227,37.754806},{-79.349208,37.75499},{-79.34325,37.761563},{-79.333935,37.759346},{-79.333027,37.761225},{-79.328768,37.760576},{-79.329062,37.755979},{-79.331256,37.747406},{-79.331734,37.743791},{-79.32766,37.743046},{-79.330507,37.743521},{-79.33394,37.742992},{-79.333843,37.740529},{-79.333306,37.73793},{-79.336804,37.736637},{-79.33774,37.733805},{-79.339834,37.731735},{-79.334254,37.729247},{-79.334709,37.728032},{-79.340887,37.729392},{-79.3493,37.720072},{-79.349303,37.718788},{-79.34945386626335,37.71859032558814},{-79.31174546502854,37.71859032558814},{-79.313111,37.721027},{-79.311756,37.722002},{-79.312147,37.72348},{-79.310087,37.72536},{-79.305188,37.728333},{-79.305164,37.730473},{-79.306576,37.7318},{-79.30717,37.733656},{-79.308504,37.734213},{-79.305365,37.736424},{-79.30335,37.739125},{-79.303545,37.740751},{-79.301648,37.742231},{-79.299336,37.746664},{-79.298097,37.750178},{-79.295824,37.752033},{-79.29277,37.755978},{-79.292788,37.757838},{-79.291705,37.758119},{-79.288419,37.763544},{-79.285353,37.76691},{-79.282388,37.769485},{-79.279438,37.772711},{-79.274467,37.779866},{-79.273276,37.781138},{-79.272346,37.785496},{-79.270136,37.787668},{-79.26851,37.79028},{-79.264976,37.794237},{-79.260713,37.791343},{-79.258937,37.793281},{-79.25548,37.793711},{-79.254622,37.795897},{-79.252401,37.797184},{-79.25226,37.797963},{-79.249716,37.800547},{-79.248611,37.802536},{-79.245932,37.805294},{-79.242862,37.806315},{-79.241949,37.807712},{-79.239976,37.80786},{-79.237689,37.808848},{-79.236166,37.810504},{-79.233194,37.812675},{-79.231171,37.813213},{-79.227901,37.812268},{-79.228907,37.809428},{-79.22536,37.807476},{-79.223563,37.807354},{-79.22142,37.805434},{-79.221033,37.802825},{-79.216217,37.801379},{-79.218257,37.798045},{-79.217379,37.795873},{-79.212424,37.793804},{-79.211404,37.79149},{-79.209243,37.789041},{-79.205857,37.789918},{-79.203546,37.788637},{-79.201512,37.789382},{-79.199497,37.788085},{-79.195968,37.78913},{-79.195735,37.79039},{-79.191607,37.793348},{-79.189085,37.794296},{-79.187579,37.794257},{-79.184202,37.795285},{-79.180042,37.795273},{-79.178507,37.797285},{-79.174438,37.798677},{-79.170797,37.80031},{-79.171926,37.803135},{-79.17144,37.804708},{-79.169722,37.806693},{-79.166723,37.808662},{-79.166633,37.810655},{-79.164925,37.812244},{-79.164316,37.815857},{-79.163179,37.816713},{-79.160911,37.817084},{-79.157728,37.819933},{-79.159898,37.82265},{-79.157692,37.825466},{-79.159918,37.826776},{-79.157002,37.828803},{-79.157328,37.830498},{-79.154662,37.832385},{-79.155,37.834467},{-79.157174,37.835918},{-79.15901,37.838607},{-79.157222,37.839406},{-79.155896,37.842925},{-79.153275,37.845225},{-79.153428,37.847165},{-79.15278,37.849171},{-79.150471,37.850161},{-79.148583,37.852451},{-79.144575,37.855661},{-79.144975,37.857232},{-79.143367,37.859414}},
			Cur:Cursor{Geometry:[]uint32{}, LastPoint:[]int32{0, 0}, Bounds:m.Extrema{W:-8.92295293265625e+06, E:-8.76640989875e+06, N:4.6962910171874985e+06, S:4.539747983281247e+06}, DeltaX:156543.0339062512, DeltaY:156543.0339062512, Count:0},
			Expected:[]uint32{9,5894,7146,2386,17,11,9,17,11,9,14,23,14,5,1,9,7,7,8,5,4,9,9,11,17,3,5,13,2,11,5,7,6,17,1,17,31,35,155,171,27,19,81,59,59,39,13,11,41,29,3,3,387,271,451,329,133,99,179,135,177,133,175,131,7,20,11,22,13,10,17,28,15,30,7,12,23,48,7,10,29,46,17,24,7,6,17,4,19,12,25,26,5,16,9,18,76,42,21,34,17,20,11,20,23,32,13,26,59,92,19,20,0,18,3,8,27,48,3,4,15,32,13,22,11,16,37,42,25,38,35,44,3,8,39,52,19,26,29,20,17,26,45,34,3,8,25,26,31,20,5,10,0,6,13,22,27,52,7,16,11,18,9,24,11,14,19,30,1,30,13,24,1,12,9,22,3,14,15,36,19,32,17,36,9,8,0,8,17,40,11,8,7,14,32,30,26,31,24,16,16,4,4,16,8,6,20,4,14,12,28,14,18,14,6,8,22,14,6,8,0,6,17,20,7,2,9,24,0,30,9,14,5,26,9,10,9,34,4,6,3,14,17,28,15,12,1,8,25,44,5,18,11,12,21,0,11,28,7,14,9,30,41,72,11,18,2,18,23,50,15,24,1,16,15,30,5,16,13,12,17,24,7,26,5,54,5,26,11,38,7,20,11,18,0,12,31,30,9,10,34,120,1784,0,4,21,16,9,18,25,22,2,3,13,15,2,11,15,15,10,13,1,0,23,6,15,5,1,14,35,37,7,0,13,6,9,50,11,12,1,28,8,18,49,18,9,4,4,6,17,14,4,24,5,6,1,36,47,54,16,4,13,26,6,1,34,13,62,1,28,24,4,15,1,19,4,0,18,2,18,19,10,3,20,13,16,34,18,3,10,35,9,47,68,0,10,1,2,220,0,7,17,8,7,1,11,12,11,28,21,0,15,7,9,1,13,7,3,18,15,12,19,1,11,12,11,12,31,8,25,14,13,18,27,0,13,6,1,18,39,18,23,18,19,16,23,30,51,6,9,6,31,12,15,10,19,22,27,24,20,10,13,20,1,6,15,12,9,2,5,14,17,6,15,16,19,18,7,6,9,10,0,14,7,8,11,18,15,12,3,20,6,5,22,20,14,10,0,12,16,4,18,28,10,11,26,4,16,30,14,6,18,12,18,20,5,12,8,12,3,12,8,22,5,0,9,24,21,16,5,8,0,20,7,24,0,8,13,24,11,22,11,5,19,2,11,10,13,18,13,0,15,10,11,4,25,6,5,14,1,18,21,11,19,12,19,11,9,16,15,1,11,16,13,1,15,11,9,11,19,10,5,8,25,16,15,1,13,4,15,14,5,12,17,22,23,1,9,10,17},
		},
	}

	for _, tcase := range testcases {
		coords := tcase.Cur.Make_Line_Float(tcase.Coord)
		for i := range coords {
			valmine := coords[i]
			valtcase := tcase.Expected[i]
			if valmine != valtcase {
				t.Errorf("Make_Line_Geom Error, Expected %s Got %s",valtcase,valmine)
			}
		}
	}
}



// test for Make_Coords_Float
func Test_Make_Polygon_Float(t *testing.T) {
	testcases := []struct {
			Cur Cursor
			Coord [][][]float64
			Expected  []uint32

	}{	
		{	
			Expected:[]uint32{},
			Coord:[][][]float64{{{-79.144182,37.86038},{-79.147561,37.862015},{-79.149087,37.864297},{-79.151333,37.865867},{-79.148608,37.868995},{-79.146444,37.869926},{-79.146609,37.871175},{-79.148116,37.872271},{-79.146631,37.873119},{-79.146086,37.874491},{-79.147633,37.87601},{-79.150761,37.876737},{-79.151872,37.878606},{-79.151415,37.880207},{-79.152644,37.881087},{-79.151459,37.88372},{-79.151931,37.886199},{-79.157423,37.890995},{-79.183978,37.914194},{-79.188868,37.916992},{-79.203026,37.925101},{-79.213373,37.930621},{-79.215586,37.932095},{-79.222985,37.936274},{-79.223729,37.936716},{-79.290254,37.973668},{-79.367781,38.018098},{-79.390704,38.031783},{-79.421869,38.050191},{-79.452312,38.068237},{-79.482405,38.086105},{-79.483715,38.083452},{-79.486021,38.080483},{-79.488298,38.079055},{-79.491326,38.075392},{-79.494038,38.071214},{-79.49542,38.069649},{-79.499522,38.062994},{-79.501175,38.061693},{-79.506323,38.05556},{-79.509346,38.052154},{-79.510558,38.051497},{-79.513608,38.050882},{-79.517051,38.049427},{-79.521513,38.04575},{-79.522534,38.043674},{-79.524522,38.041294},{-79.511167,38.035387},{-79.515073,38.030855},{-79.518355,38.028246},{-79.520168,38.025609},{-79.524328,38.021277},{-79.526869,38.017597},{-79.537081,38.005113},{-79.540507,38.002394},{-79.540444,38.000127},{-79.541341,37.998967},{-79.545984,37.992422},{-79.546769,37.991941},{-79.54942,37.987686},{-79.55175,37.984655},{-79.553811,37.982566},{-79.560257,37.976887},{-79.564719,37.971573},{-79.571175,37.965595},{-79.571788,37.964524},{-79.578544,37.957484},{-79.582184,37.954211},{-79.587204,37.951277},{-79.590142,37.947881},{-79.598134,37.943181},{-79.59894,37.942175},{-79.603403,37.938554},{-79.608795,37.935944},{-79.609841,37.934716},{-79.609888,37.933846},{-79.612404,37.930863},{-79.617195,37.923887},{-79.618338,37.921457},{-79.620384,37.919175},{-79.622178,37.915991},{-79.624273,37.913951},{-79.627717,37.90988},{-79.628104,37.905974},{-79.630581,37.902508},{-79.630626,37.901082},{-79.632522,37.898026},{-79.633035,37.896165},{-79.636115,37.891137},{-79.639303,37.887021},{-79.642361,37.882129},{-79.644109,37.88094},{-79.644102,37.879933},{-79.647375,37.874484},{-79.649171,37.873452},{-79.650757,37.871566},{-79.64522,37.867355},{-79.640892,37.87184},{-79.636802,37.869531},{-79.633971,37.868953},{-79.633259,37.866927},{-79.631807,37.866026},{-79.628312,37.865499},{-79.625836,37.863747},{-79.621253,37.862064},{-79.618173,37.86002},{-79.617014,37.859051},{-79.61323,37.856986},{-79.612272,37.856085},{-79.612289,37.855114},{-79.615436,37.852616},{-79.616675,37.852157},{-79.618534,37.848871},{-79.618598,37.844968},{-79.620265,37.843099},{-79.621328,37.839518},{-79.622911,37.837993},{-79.62457,37.833643},{-79.623954,37.832638},{-79.624764,37.830773},{-79.627596,37.827131},{-79.630567,37.825253},{-79.630945,37.824181},{-79.635308,37.818247},{-79.636383,37.815753},{-79.638226,37.814359},{-79.642271,37.814334},{-79.644219,37.810328},{-79.645682,37.808678},{-79.647229,37.804391},{-79.654603,37.794668},{-79.656596,37.792348},{-79.656343,37.789844},{-79.660423,37.783018},{-79.663223,37.779862},{-79.663491,37.777591},{-79.666094,37.773657},{-79.66709,37.771477},{-79.669628,37.769688},{-79.672759,37.766633},{-79.674006,37.763052},{-79.675085,37.75575},{-79.676163,37.751997},{-79.678046,37.747078},{-79.679592,37.744263},{-79.681608,37.741825},{-79.681665,37.740276},{-79.687203,37.736192},{-79.68872,37.734668},{-79.6830668024958,37.71859032558814},{-79.3768872376557,37.71859032558814},{-79.376175,37.721353},{-79.373406,37.722893},{-79.370364,37.72646},{-79.366497,37.726073},{-79.367034,37.727922},{-79.369847,37.727556},{-79.372003,37.729752},{-79.374599,37.728433},{-79.376926,37.728724},{-79.377126,37.73213},{-79.37612,37.734194},{-79.377221,37.734555},{-79.374808,37.739337},{-79.38134,37.740553},{-79.381126,37.742352},{-79.380274,37.74359},{-79.371454,37.745348},{-79.369519,37.745602},{-79.36472,37.744581},{-79.361502,37.751269},{-79.358453,37.752688},{-79.357909,37.75213},{-79.356702,37.754614},{-79.35432,37.754034},{-79.350227,37.754806},{-79.349208,37.75499},{-79.34325,37.761563},{-79.333935,37.759346},{-79.333027,37.761225},{-79.328768,37.760576},{-79.329062,37.755979},{-79.331256,37.747406},{-79.331734,37.743791},{-79.32766,37.743046},{-79.330507,37.743521},{-79.33394,37.742992},{-79.333843,37.740529},{-79.333306,37.73793},{-79.336804,37.736637},{-79.33774,37.733805},{-79.339834,37.731735},{-79.334254,37.729247},{-79.334709,37.728032},{-79.340887,37.729392},{-79.3493,37.720072},{-79.349303,37.718788},{-79.34945386626335,37.71859032558814},{-79.31174546502854,37.71859032558814},{-79.313111,37.721027},{-79.311756,37.722002},{-79.312147,37.72348},{-79.310087,37.72536},{-79.305188,37.728333},{-79.305164,37.730473},{-79.306576,37.7318},{-79.30717,37.733656},{-79.308504,37.734213},{-79.305365,37.736424},{-79.30335,37.739125},{-79.303545,37.740751},{-79.301648,37.742231},{-79.299336,37.746664},{-79.298097,37.750178},{-79.295824,37.752033},{-79.29277,37.755978},{-79.292788,37.757838},{-79.291705,37.758119},{-79.288419,37.763544},{-79.285353,37.76691},{-79.282388,37.769485},{-79.279438,37.772711},{-79.274467,37.779866},{-79.273276,37.781138},{-79.272346,37.785496},{-79.270136,37.787668},{-79.26851,37.79028},{-79.264976,37.794237},{-79.260713,37.791343},{-79.258937,37.793281},{-79.25548,37.793711},{-79.254622,37.795897},{-79.252401,37.797184},{-79.25226,37.797963},{-79.249716,37.800547},{-79.248611,37.802536},{-79.245932,37.805294},{-79.242862,37.806315},{-79.241949,37.807712},{-79.239976,37.80786},{-79.237689,37.808848},{-79.236166,37.810504},{-79.233194,37.812675},{-79.231171,37.813213},{-79.227901,37.812268},{-79.228907,37.809428},{-79.22536,37.807476},{-79.223563,37.807354},{-79.22142,37.805434},{-79.221033,37.802825},{-79.216217,37.801379},{-79.218257,37.798045},{-79.217379,37.795873},{-79.212424,37.793804},{-79.211404,37.79149},{-79.209243,37.789041},{-79.205857,37.789918},{-79.203546,37.788637},{-79.201512,37.789382},{-79.199497,37.788085},{-79.195968,37.78913},{-79.195735,37.79039},{-79.191607,37.793348},{-79.189085,37.794296},{-79.187579,37.794257},{-79.184202,37.795285},{-79.180042,37.795273},{-79.178507,37.797285},{-79.174438,37.798677},{-79.170797,37.80031},{-79.171926,37.803135},{-79.17144,37.804708},{-79.169722,37.806693},{-79.166723,37.808662},{-79.166633,37.810655},{-79.164925,37.812244},{-79.164316,37.815857},{-79.163179,37.816713},{-79.160911,37.817084},{-79.157728,37.819933},{-79.159898,37.82265},{-79.157692,37.825466},{-79.159918,37.826776},{-79.157002,37.828803},{-79.157328,37.830498},{-79.154662,37.832385},{-79.155,37.834467},{-79.157174,37.835918},{-79.15901,37.838607},{-79.157222,37.839406},{-79.155896,37.842925},{-79.153275,37.845225},{-79.153428,37.847165},{-79.15278,37.849171},{-79.150471,37.850161},{-79.148583,37.852451},{-79.144575,37.855661},{-79.144975,37.857232},{-79.143367,37.859414}},{{-79.415309,37.78806},{-79.417102,37.787545},{-79.420824,37.788998},{-79.42306,37.78858},{-79.423269,37.786217},{-79.421608,37.784864},{-79.427017,37.785345},{-79.428847,37.78418},{-79.43168,37.779765},{-79.433161,37.778505},{-79.434998,37.778382},{-79.436149,37.776455},{-79.439721,37.774124},{-79.447074,37.769859},{-79.448259,37.769809},{-79.447607,37.768816},{-79.451763,37.766454},{-79.453556,37.766148},{-79.455749,37.765126},{-79.457542,37.766128},{-79.459188,37.768377},{-79.456337,37.770048},{-79.460631,37.772424},{-79.456772,37.77827},{-79.45565,37.779543},{-79.460108,37.783388},{-79.461395,37.783021},{-79.461752,37.785366},{-79.461917,37.78616},{-79.458758,37.789017},{-79.457805,37.789265},{-79.456515,37.791261},{-79.454146,37.792447},{-79.453488,37.793077},{-79.45136,37.791611},{-79.446263,37.791284},{-79.437453,37.795115},{-79.437123,37.794748},{-79.435986,37.794012},{-79.431646,37.793563},{-79.428792,37.793497},{-79.427317,37.792008},{-79.426762,37.791769},{-79.416645,37.789706},{-79.415956,37.789526}}},
			Cur:Cursor{Geometry:[]uint32{}, LastPoint:[]int32{0, 0}, Bounds:m.Extrema{W:-8.92295293265625e+06, E:-8.76640989875e+06, N:4.6962910171874985e+06, S:4.539747983281247e+06}, DeltaX:156543.0339062512, DeltaY:156543.0339062512, Count:0},
		},
	}

	for _, tcase := range testcases {
		coords := tcase.Cur.Make_Polygon_Float(tcase.Coord)
		for i := range coords {
			valmine := coords[i]
			valtcase := tcase.Expected[i]
			if valmine != valtcase {
				t.Errorf("Make_Coords_Polygon_Float Error, Expected %s Got %s",valtcase,valmine)
			}
		}
	}
}


// test for Make_Coords_Float
func Test_Make_Point_Float(t *testing.T) {
	testcases := []struct {
			Row []float64
			Cur Cursor
			Expected []uint32
	}{	
		{
			Row:[]float64{-79.144182, 37.86038},
			Cur:Cursor{Geometry:[]uint32{}, LastPoint:[]int32{0, 0}, Bounds:m.Extrema{W:-8.92295293265625e+06, E:-8.76640989875e+06, N:4.6962910171874985e+06, S:4.539747983281247e+06}, DeltaX:156543.0339062512, DeltaY:156543.0339062512, Count:0},
			Expected:[]uint32{9, 5894, 7146},
		},
	}

	for _, tcase := range testcases {
		coords := tcase.Cur.Make_Point_Float(tcase.Row)
		for i := range coords {
			valmine := coords[i]
			valtcase := tcase.Expected[i]
			if valmine != valtcase {
				t.Errorf("Make_Line_Geom Error, Expected %s Got %s",valtcase,valmine)
			}
		}
	}
}